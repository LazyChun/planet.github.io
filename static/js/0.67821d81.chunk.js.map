{"version":3,"sources":["components/common/ReportButton.js","components/pages/blog/BlogSegaments/Video.js","components/common/comment/segaments/CommentActions.js","components/common/comment/segaments/CommentForm.js","components/common/comment/segaments/ReplyForm.js","components/common/comment/segaments/SubComment.js","components/common/comment/segaments/LastSubComments.js","components/common/comment/segaments/SubCommentList.js","components/common/comment/segaments/SubComments.js","components/common/comment/Comment.js","components/common/comment/Comments.js","components/pages/ClickWrapper.js"],"names":["Btn","styled","Tooltip","ReportButton","type","objId","title","currentReport","reportCallback","text","children","useState","show","setShow","onClick","onHide","Container","div","HidePanel","LoadingContent","LoadingText","VideoForm","Video","contentUrl","isContent","content","setContent","useEffect","getDataFromUrl","str","dangerouslySetInnerHTML","__html","e","stopPropagation","DateText","ReplyButton","MainActionsBox","ThumbsUp","Icon","UpCount","CommentActions","commentId","dateCreated","onReply","upCount","currentUpped","uCount","setUCount","report","setReport","cUpped","setCUpped","useMutation","SWITCH_UP_COMMENT","onCompleted","data","switchUpComment","onError","ModalHint","error","loading","useCommentActions","color","variables","name","ReportHint","LeftBox","ContentBox","TextInput","TextArea","SendButton","Button","CommentForm","commentType","currentUser","refetchComments","repliedCommentId","parentId","replyPlaceholder","saveCallback","useComment","refetch","clearForm","mLoading","onSaveComment","Avatar","width","size","url","_get","onInput","value","onFocus","LoginHint","checkLogin","maxLength","rows","placeholder","style","marginLeft","primary","ReplyForm","UserInfoBox","Name","Content","ReplyBox","ReplyUser","span","UserInfo","creator","repliedComment","_getByRank","ContentInfo","AvatarBox","SubComment","item","refchComments","onSaveCallback","useReplyForm","showReplyForm","setShowReplyForm","avatar","id","CheckMoreBox","ClickMore","CheckMoreButton","commentsCount","onCheckMore","LastSubComments","last3Comments","subComments","setSubComments","subCommentsCount","setSubCommentsCount","useLastSubComments","_map","subComment","key","comment","CommentsBox","SubCommentList","PaginationQueryList","searchFields","types","isUserQuery","sort","order","hidePaginationInSinglePage","gql","GET_COMMENTS","paginationSecondary","paginationSize","dataKey","limit","count","items","SubComments","checkMore","setCheckMore","useSubComments","_isEmpty","props","isLastOne","CommentItem","useRefresh","refresh","onRefresh","then","res","Comments","App","Consumer","searchParentComment","index","Comment","length","ClickWrapper","autoLoading","toString","mutate"],"mappings":"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","file":"static/js/0.67821d81.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReportModal from \"./ReportModal\";\r\nimport { Tooltip } from \"antd\";\r\n\r\nconst Btn = styled(Tooltip)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n`;\r\n\r\nconst ReportButton = ({\r\n  type,\r\n  objId,\r\n  title,\r\n  currentReport,\r\n  reportCallback,\r\n  text,\r\n  children\r\n}) => {\r\n  const [show, setShow] = useState(false);\r\n  return (\r\n    <>\r\n      <Btn\r\n        onClick={() => setShow(true)}\r\n        title={currentReport ? \"已举报\" : \"点击举报\"}\r\n      >\r\n        {children ? children : text}\r\n      </Btn>\r\n      {show && (\r\n        <ReportModal\r\n          type={type}\r\n          objId={objId}\r\n          title={title}\r\n          currentReport={currentReport}\r\n          reportCallback={reportCallback}\r\n          onHide={() => setShow(false)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReportButton;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { getDataFromUrl } from \"../../../utils/urlData\";\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  .bilibili-player-video-pause-panel-container-qrcode {\r\n    display: none !important;\r\n  }\r\n  iframe {\r\n    position: absolute;\r\n    left: 0px;\r\n    right: 0px;\r\n    width: 100% !important;\r\n    height: 800px;\r\n    margin: 0;\r\n    padding: 0;\r\n    .bilibili-player-video-pause-panel-container-qrcode {\r\n      display: none !important;\r\n    }\r\n  }\r\n  background-color: white;\r\n`;\r\n\r\nconst HidePanel = styled.div`\r\n  position: absolute;\r\n  left: 0px;\r\n  right: 0px;\r\n  top: 758px;\r\n  height: 38px;\r\n  z-index: 200;\r\n  background-color: white;\r\n`;\r\n\r\nconst LoadingContent = styled.div`\r\n  position: relative;\r\n  background-color: #f6f6f6;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 800px;\r\n`;\r\n\r\nconst LoadingText = styled.div`\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst VideoForm = styled.div`\r\n  position: absolute;\r\n  top: -14px;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 100;\r\n`;\r\n\r\nconst Video = ({ contentUrl, isContent = true }) => {\r\n  const [content, setContent] = useState(\"\");\r\n  useEffect(() => {\r\n    if (isContent) {\r\n      getDataFromUrl(contentUrl, \"data.content\", str => setContent(str));\r\n    } else {\r\n      setContent(contentUrl);\r\n    }\r\n  }, [contentUrl]);\r\n  return (\r\n    <Container>\r\n      <LoadingContent>\r\n        <LoadingText>加载中...</LoadingText>\r\n        <VideoForm dangerouslySetInnerHTML={{ __html: content }} />\r\n      </LoadingContent>\r\n\r\n      <HidePanel onClick={e => e.stopPropagation()} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Video;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { SWITCH_UP_COMMENT } from \"../../mutationGql\";\r\nimport ModalHint from \"../../ModalHint\";\r\nimport ReportHint from \"../../ReportHint\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n  margin-top: 10px;\r\n  color: #99a2aa;\r\n`;\r\n\r\nconst DateText = styled.div`\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst ReplyButton = styled.div`\r\n  cursor: pointer;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst MainActionsBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst ReportButton = styled.div`\r\n  cursor: pointer;\r\n  font-size: 10px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst ThumbsUp = styled(Icon)`\r\n  cursor: pointer;\r\n  margin-right: 4px !important;\r\n  margin-bottom: 4px !important;\r\n`;\r\n\r\nconst UpCount = styled.div``;\r\n\r\nconst useCommentActions = ({ upCount, currentUpped, currentReport }) => {\r\n  const [uCount, setUCount] = useState(upCount);\r\n  const [report, setReport] = useState(currentReport);\r\n  const [cUpped, setCUpped] = useState(currentUpped);\r\n  const [switchUpComment, { data, loading }] = useMutation(SWITCH_UP_COMMENT, {\r\n    onCompleted: data => {\r\n      const { switchUpComment } = data;\r\n      setUCount(switchUpComment.upCount);\r\n      setCUpped(switchUpComment.currentUpped);\r\n    },\r\n    onError: () => ModalHint.error(\"点赞失败\")\r\n  });\r\n  return {\r\n    uCount,\r\n    setUCount,\r\n    cUpped,\r\n    setCUpped,\r\n    switchUpComment,\r\n    report,\r\n    setReport\r\n  };\r\n};\r\n\r\nconst CommentActions = ({\r\n  commentId,\r\n  dateCreated,\r\n  onReply,\r\n  upCount,\r\n  currentUpped,\r\n  currentReport\r\n}) => {\r\n  const {\r\n    uCount,\r\n    cUpped,\r\n    switchUpComment,\r\n    report,\r\n    setReport\r\n  } = useCommentActions({\r\n    upCount,\r\n    currentUpped,\r\n    currentReport\r\n  });\r\n  return (\r\n    <Container>\r\n      <MainActionsBox>\r\n        <DateText>{dateCreated}</DateText>\r\n        <ThumbsUp\r\n          color={cUpped ? \"red\" : \"\"}\r\n          onClick={e => {\r\n            e.stopPropagation();\r\n            switchUpComment({ variables: { commentId } });\r\n          }}\r\n          name={cUpped ? \"thumbs up\" : \"thumbs up outline\"}\r\n        />\r\n        {uCount > 0 && <UpCount>{uCount}</UpCount>}\r\n        {onReply && <ReplyButton onClick={onReply}>回复</ReplyButton>}\r\n      </MainActionsBox>\r\n      <ReportButton\r\n        onClick={e => {\r\n          e.stopPropagation();\r\n          ReportHint.show(\"Comment\", commentId, report, {\r\n            reportCallback: report => setReport(report)\r\n          });\r\n        }}\r\n      >\r\n        {report ? \"已举报\" : \"举报\"}\r\n      </ReportButton>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CommentActions;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TextArea, Button } from \"semantic-ui-react\";\r\nimport Avatar from \"../../../pages/transformable/common/Avatar\";\r\nimport _get from \"lodash/get\";\r\nimport { useComment } from \"../../hooks\";\r\nimport LoginHint from \"../../LoginHint\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 70px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst LeftBox = styled.div`\r\n  width: 80px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n`;\r\n\r\nconst ContentBox = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n`;\r\n\r\nconst TextInput = styled(TextArea)`\r\n  flex: 1;\r\n  padding: 10px;\r\n  height: 65px;\r\n  outline: none;\r\n  border-radius: 6px;\r\n  &:focus {\r\n    -moz-outline-radius: 6px;\r\n    border: 1px solid lightskyblue;\r\n  }\r\n`;\r\n\r\nconst SendButton = styled(Button)``;\r\n\r\nconst CommentForm = ({\r\n  objId,\r\n  commentType,\r\n  currentUser,\r\n  refetchComments,\r\n  repliedCommentId,\r\n  parentId,\r\n  replyPlaceholder,\r\n  saveCallback\r\n}) => {\r\n  const [content, setContent] = useState(\"\");\r\n  const { mLoading, onSaveComment } = useComment({\r\n    refetch: refetchComments,\r\n    commentType,\r\n    repliedCommentId,\r\n    parentId,\r\n    objId,\r\n    saveCallback,\r\n    clearForm: () => setContent(\"\")\r\n  });\r\n  return (\r\n    <Container>\r\n      <LeftBox>\r\n        <Avatar width={54} size={\"big\"} url={_get(currentUser, \"avatar.url\")} />\r\n      </LeftBox>\r\n      <ContentBox>\r\n        <TextInput\r\n          onInput={(e, { value }) => setContent(value)}\r\n          onFocus={() => LoginHint.checkLogin()}\r\n          maxLength={255}\r\n          rows={4}\r\n          placeholder={replyPlaceholder}\r\n          value={content}\r\n        />\r\n        <SendButton\r\n          loading={mLoading}\r\n          onClick={() => LoginHint.checkLogin(() => onSaveComment(content))}\r\n          style={{ marginLeft: 10 }}\r\n          primary\r\n        >\r\n          发布\r\n        </SendButton>\r\n      </ContentBox>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CommentForm;\r\n","import React, { useState } from \"react\";\r\nimport CommentForm from \"./CommentForm\";\r\n\r\nconst ReplyForm = ({\r\n  commentType,\r\n  objId,\r\n  currentUser,\r\n  refetchComments,\r\n  repliedCommentId,\r\n  parentId,\r\n  replyPlaceholder,\r\n  saveCallback\r\n}) => {\r\n  return (\r\n    <CommentForm\r\n      commentType={commentType}\r\n      objId={objId}\r\n      saveCallback={saveCallback}\r\n      repliedCommentId={repliedCommentId}\r\n      currentUser={currentUser}\r\n      parentId={parentId}\r\n      refetchComments={refetchComments}\r\n      replyPlaceholder={replyPlaceholder}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ReplyForm;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { _getByRank } from \"../../../utils/utils\";\r\nimport Avatar from \"../../../pages/transformable/common/Avatar\";\r\nimport _get from \"lodash/get\";\r\nimport CommentActions from \"./CommentActions\";\r\nimport ReplyForm from \"./ReplyForm\";\r\nimport { useReplyForm } from \"../../hooks\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n`;\r\n\r\nconst UserInfoBox = styled.div`\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Name = styled.div`\r\n  color: #6d757a;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  text-align: left;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  text-align: left;\r\n`;\r\n\r\nconst ReplyBox = styled.div`\r\n  font-size: 14px;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst ReplyUser = styled.span`\r\n  color: #00a1d6;\r\n  margin-left: 10px;\r\n  margin-right: 10px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst UserInfo = ({ creator, repliedComment }) => {\r\n  return (\r\n    <UserInfoBox>\r\n      <Name>{_getByRank(creator, [\"nickname\", \"username\"])}</Name>\r\n      {repliedComment && (\r\n        <ReplyBox>\r\n          回复\r\n          <ReplyUser>\r\n            @{_getByRank(repliedComment.creator, [\"nickname\", \"username\"])}\r\n          </ReplyUser>\r\n          :\r\n        </ReplyBox>\r\n      )}\r\n    </UserInfoBox>\r\n  );\r\n};\r\n\r\nconst ContentInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst AvatarBox = styled.div`\r\n  width: 40px;\r\n`;\r\n\r\nconst ContentBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\n\r\nconst SubComment = ({\r\n  item,\r\n  currentUser,\r\n  objId,\r\n  type,\r\n  refchComments,\r\n  parentId,\r\n  onSaveCallback\r\n}) => {\r\n  const {\r\n    creator,\r\n    content,\r\n    dateCreated,\r\n    currentUpped,\r\n    upCount,\r\n    currentReport\r\n  } = item;\r\n  const { showReplyForm, setShowReplyForm, replyPlaceholder } = useReplyForm({\r\n    repliedComment: item\r\n  });\r\n  return (\r\n    <Container>\r\n      <AvatarBox>\r\n        <Avatar\r\n          size={\"small\"}\r\n          width={30}\r\n          avatar={_get(creator, \"avatar.url\")}\r\n        />\r\n      </AvatarBox>\r\n      <ContentBox>\r\n        <ContentInfo>\r\n          <UserInfo creator={creator} repliedComment={item.repliedComment} />\r\n          <Content>{content}</Content>\r\n          <CommentActions\r\n            onReply={() => setShowReplyForm(!showReplyForm)}\r\n            dateCreated={dateCreated}\r\n            currentUpped={currentUpped}\r\n            upCount={upCount}\r\n            commentId={item.id}\r\n            currentReport={currentReport}\r\n          />\r\n        </ContentInfo>\r\n        {showReplyForm && (\r\n          <ReplyForm\r\n            saveCallback={onSaveCallback}\r\n            replyPlaceholder={replyPlaceholder}\r\n            parentId={parentId}\r\n            currentUser={currentUser}\r\n            commentType={type}\r\n            objId={objId}\r\n            refetchComments={refchComments}\r\n            repliedCommentId={item.id}\r\n          />\r\n        )}\r\n      </ContentBox>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SubComment;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport _map from \"lodash/map\";\r\nimport SubComment from \"./SubComment\";\r\n\r\nconst Container = styled.div``;\r\n\r\nconst CheckMoreBox = styled.div`\r\n  text-align: left;\r\n  color: #6d757a;\r\n  font-size: 12px;\r\n`;\r\n\r\nconst ClickMore = styled.span`\r\n  cursor: pointer;\r\n  color: #00a1d6;\r\n`;\r\n\r\nconst CheckMoreButton = ({ commentsCount, onCheckMore }) => {\r\n  if (commentsCount < 3) {\r\n    return null;\r\n  }\r\n  return (\r\n    <CheckMoreBox>\r\n      共<b>{commentsCount}</b>条回复，\r\n      <ClickMore onClick={onCheckMore}>点击查看</ClickMore>\r\n    </CheckMoreBox>\r\n  );\r\n};\r\n\r\nconst useLastSubComments = ({ item }) => {\r\n  const { last3Comments } = item;\r\n  const [subComments, setSubComments] = useState(last3Comments);\r\n  const [subCommentsCount, setSubCommentsCount] = useState(\r\n    item.subCommentsCount\r\n  );\r\n\r\n  return { subComments, subCommentsCount, setSubComments, setSubCommentsCount };\r\n};\r\n\r\nconst LastSubComments = ({\r\n  currentUser,\r\n  objId,\r\n  type,\r\n  parentId,\r\n  onCheckMore,\r\n  item\r\n}) => {\r\n  const {\r\n    subComments,\r\n    subCommentsCount,\r\n    setSubComments,\r\n    setSubCommentsCount\r\n  } = useLastSubComments({ item });\r\n  return (\r\n    <Container>\r\n      {_map(subComments, subComment => {\r\n        return (\r\n          <SubComment\r\n            key={\"sub_comment_\" + subComment.id}\r\n            item={subComment}\r\n            type={type}\r\n            currentUser={currentUser}\r\n            objId={objId}\r\n            onSaveCallback={comment => {\r\n              setSubCommentsCount(subCommentsCount + 1);\r\n              setSubComments([comment, ...subComments]);\r\n            }}\r\n            parentId={parentId}\r\n          />\r\n        );\r\n      })}\r\n      <CheckMoreButton\r\n        commentsCount={subCommentsCount}\r\n        onCheckMore={onCheckMore}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LastSubComments;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PaginationQueryList from \"../../PaginationQueryList\";\r\nimport { GET_COMMENTS } from \"../../queryGql\";\r\nimport _map from \"lodash/map\";\r\nimport SubComment from \"./SubComment\";\r\n\r\nconst Container = styled.div`\r\n  .paginationWrapper {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n  }\r\n`;\r\n\r\nconst CommentsBox = styled.div``;\r\n\r\nconst SubCommentList = ({ objId, type, currentUser, parentId }) => {\r\n  return (\r\n    <Container>\r\n      <PaginationQueryList\r\n        searchFields={{\r\n          objId,\r\n          parentId,\r\n          types: [type],\r\n          isUserQuery: true,\r\n          sort: \"dateCreated\",\r\n          order: \"asc\"\r\n        }}\r\n        hidePaginationInSinglePage={true}\r\n        gql={GET_COMMENTS}\r\n        paginationSecondary={true}\r\n        paginationSize={\"mini\"}\r\n        dataKey={\"comments\"}\r\n        limit={10}\r\n      >\r\n        {({ loading, count, items, refetch }) => {\r\n          return (\r\n            <CommentsBox>\r\n              {_map(items, item => {\r\n                return (\r\n                  <SubComment\r\n                    key={\"sub_comment_\" + item.id}\r\n                    refchComments={refetch}\r\n                    currentUser={currentUser}\r\n                    objId={objId}\r\n                    item={item}\r\n                    type={type}\r\n                    parentId={parentId}\r\n                  />\r\n                );\r\n              })}\r\n            </CommentsBox>\r\n          );\r\n        }}\r\n      </PaginationQueryList>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SubCommentList;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport _isEmpty from \"lodash/isEmpty\";\r\nimport LastSubComments from \"./LastSubComments\";\r\nimport SubCommentList from \"./SubCommentList\";\r\n\r\nconst Container = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst useSubComments = ({ item }) => {\r\n  const [checkMore, setCheckMore] = useState(false);\r\n  return { checkMore, setCheckMore };\r\n};\r\n\r\nconst SubComments = ({ item, currentUser, objId, type }) => {\r\n  const { checkMore, setCheckMore } = useSubComments({ item });\r\n  if (_isEmpty(item.last3Comments)) {\r\n    return null;\r\n  }\r\n  return (\r\n    <Container>\r\n      {checkMore ? (\r\n        <SubCommentList\r\n          objId={objId}\r\n          currentUser={currentUser}\r\n          type={type}\r\n          parentId={item.id}\r\n        />\r\n      ) : (\r\n        <LastSubComments\r\n          objId={objId}\r\n          type={type}\r\n          item={item}\r\n          parentId={item.id}\r\n          onCheckMore={() => setCheckMore(true)}\r\n          currentUser={currentUser}\r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SubComments;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Avatar from \"../../pages/transformable/common/Avatar\";\r\nimport _get from \"lodash/get\";\r\nimport { _getByRank } from \"../../utils/utils\";\r\nimport CommentActions from \"./segaments/CommentActions\";\r\nimport { useRefresh, useReplyForm } from \"../hooks\";\r\nimport ReplyForm from \"./segaments/ReplyForm\";\r\nimport SubComments from \"./segaments/SubComments\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  margin-bottom: 24px;\r\n  padding-bottom: 20px;\r\n  border-bottom: 1px solid\r\n    ${props => (props.isLastOne ? \"transparent\" : \"#e5e9ef\")};\r\n`;\r\n\r\nconst AvatarBox = styled.div`\r\n  width: 80px;\r\n`;\r\n\r\nconst ContentBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\n\r\nconst UserInfoBox = styled.div`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Name = styled.div`\r\n  color: #6d757a;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  text-align: left;\r\n`;\r\n\r\nconst UserInfo = ({ creator }) => {\r\n  return (\r\n    <UserInfoBox>\r\n      <Name>{_getByRank(creator, [\"nickname\", \"username\"])}</Name>\r\n    </UserInfoBox>\r\n  );\r\n};\r\n\r\nconst ContentInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  text-align: left;\r\n`;\r\n\r\nconst CommentItem = ({\r\n  item,\r\n  currentUser,\r\n  objId,\r\n  type,\r\n  refetchComments,\r\n  isLastOne\r\n}) => {\r\n  const {\r\n    creator,\r\n    content,\r\n    dateCreated,\r\n    id,\r\n    currentUpped,\r\n    upCount,\r\n    currentReport\r\n  } = item;\r\n  const { showReplyForm, setShowReplyForm, replyPlaceholder } = useReplyForm({\r\n    repliedComment: item\r\n  });\r\n  const [refresh, onRefresh] = useRefresh();\r\n  return (\r\n    <Container key={refresh} isLastOne={isLastOne}>\r\n      <AvatarBox>\r\n        <Avatar\r\n          size={\"large\"}\r\n          width={50}\r\n          avatar={_get(creator, \"avatar.url\")}\r\n        />\r\n      </AvatarBox>\r\n      <ContentBox>\r\n        <ContentInfo>\r\n          <UserInfo creator={creator} />\r\n          <Content>{content}</Content>\r\n          <CommentActions\r\n            onReply={() => setShowReplyForm(!showReplyForm)}\r\n            dateCreated={dateCreated}\r\n            currentUpped={currentUpped}\r\n            upCount={upCount}\r\n            commentId={id}\r\n            currentReport={currentReport}\r\n          />\r\n        </ContentInfo>\r\n        <SubComments\r\n          type={type}\r\n          currentUser={currentUser}\r\n          objId={objId}\r\n          item={item}\r\n        />\r\n        {showReplyForm && (\r\n          <ReplyForm\r\n            refetchComments={() => {\r\n              refetchComments().then(res => {\r\n                onRefresh();\r\n              });\r\n            }}\r\n            replyPlaceholder={replyPlaceholder}\r\n            parentId={id}\r\n            currentUser={currentUser}\r\n            commentType={type}\r\n            objId={objId}\r\n          />\r\n        )}\r\n      </ContentBox>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CommentItem;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PaginationQueryList from \"../PaginationQueryList\";\r\nimport { GET_COMMENTS } from \"../queryGql\";\r\nimport CommentForm from \"./segaments/CommentForm\";\r\nimport _map from \"lodash/map\";\r\nimport CommentItem from \"./Comment\";\r\nimport { AppContext } from \"../../../App\";\r\n\r\nconst Container = styled.div`\r\n  .paginationWrapper {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n  }\r\n`;\r\n\r\nconst CommentsBox = styled.div`\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst Comments = ({ objId, type }) => {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {props => {\r\n        const { currentUser } = props;\r\n        return (\r\n          <Container>\r\n            <PaginationQueryList\r\n              searchFields={{\r\n                objId,\r\n                types: [type],\r\n                isUserQuery: true,\r\n                searchParentComment: true\r\n              }}\r\n              hidePaginationInSinglePage={true}\r\n              gql={GET_COMMENTS}\r\n              paginationSize={\"mini\"}\r\n              paginationSecondary={true}\r\n              dataKey={\"comments\"}\r\n              limit={10}\r\n            >\r\n              {({ loading, count, items, refetch }) => {\r\n                return (\r\n                  <CommentsBox>\r\n                    <CommentForm\r\n                      objId={objId}\r\n                      commentType={type}\r\n                      currentUser={currentUser}\r\n                      refetchComments={refetch}\r\n                    />\r\n                    {_map(items, (item, index) => {\r\n                      return (\r\n                        <CommentItem\r\n                          key={\"comment_\" + item.id}\r\n                          item={item}\r\n                          isLastOne={index + 1 === items.length}\r\n                          objId={objId}\r\n                          type={type}\r\n                          refetchComments={refetch}\r\n                          currentUser={currentUser}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </CommentsBox>\r\n                );\r\n              }}\r\n            </PaginationQueryList>\r\n          </Container>\r\n        );\r\n      }}\r\n    </AppContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","import React from \"react\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport Loading from \"../common/Loading\";\r\nimport ModalHint from \"../common/ModalHint\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst ClickWrapper = ({\r\n  variables,\r\n  children,\r\n  gql,\r\n  autoLoading,\r\n  onCompleted,\r\n  onError\r\n}) => {\r\n  const [mutate, { data, loading }] = useMutation(gql, {\r\n    variables,\r\n    onCompleted: onCompleted,\r\n    onError: onError\r\n      ? onError\r\n      : error => {\r\n          ModalHint.error(error.toString());\r\n        }\r\n  });\r\n  const content = (\r\n    <Container onClick={() => mutate({ variables })}>{children}</Container>\r\n  );\r\n  if (autoLoading && loading) {\r\n    return <Loading>{content}</Loading>;\r\n  }\r\n  return content;\r\n};\r\n\r\nexport default ClickWrapper;\r\n"],"sourceRoot":""}